/* _mixins.scss */

// Prefixer helper mixin for other mixins
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    -#{$prefix}-#{$property}: $value;
  }

  #{$property}: $value;
}

// Font Size
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  @if unitless($size) {
    $size: $size * 1px;
  }

  font-size: $size;
  font-size: calculateRem($size);
}

// Animations
@mixin keyframes($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }
  @-ms-keyframes $animation-name {
    @content;
  }
  @-o-keyframes $animation-name {
    @content;
  }
  @keyframes $animation-name {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

// Transitions
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

// Cross browser opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// Gradient
@mixin background-gradient($start-color, $end-color, $orientation) {
  background: $start-color;

  @if $orientation == 'vertical' {
    background: -webkit-linear-gradient(top, $start-color, $end-color);
    background: linear-gradient(to bottom, $start-color, $end-color);
  } @else if $orientation == 'horizontal' {
    background: -webkit-linear-gradient(left, $start-color, $end-color);
    background: linear-gradient(to right, $start-color, $end-color);
  } @else {
    background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}

// Background Size
@mixin background-size($width, $height: $width) {
  @include prefix(background-size, $width $height, 'webkit' 'moz');
}

// Border radius
@mixin border-radius-separate($top-left-radius, $top-right-radius, $bottom-right-radius, $bottom-left-radius) {
  @include prefix(border-top-left-radius, $top-left-radius, 'webkit' 'moz');
  @include prefix(border-top-right-radius, $top-right-radius, 'webkit' 'moz');
  @include prefix(border-bottom-right-radius, $bottom-right-radius, 'webkit' 'moz');
  @include prefix(border-bottom-left-radius, $bottom-left-radius, 'webkit' 'moz');
}

// Box sizing
@mixin box-sizing($type) {
  @include prefix(box-sizing, $type, 'moz');
}

// Center horizontal block
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Center horizontal and vertical block
@mixin center-both {
  position: absolute;
  top: 50%;
  left: 50%;
  @include prefix(transform, translate(-50%, -50%), 'webkit' 'ms');
}

// Center vertical block
@mixin center-h--unk {
  position: relative;
  top: 50%;
  @include prefix(transform, translateY(-50%), 'webkit' 'ms');
}
